@{
var usersWithRoles = ViewBag.UsersWithRoles as List<(string UserId, string Email, IList<string> Roles)>;
var roles = ViewBag.Roles as SelectList;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Manage User Roles</h2>
    <button onclick="location.href='@Url.Action("CreateUser")'" class="btn btn-outline-primary">
        Create New User
    </button>
</div>

<table class="table">
    <thead>
    <tr>
        <th>Email</th>
        <th>Roles</th>
        <th>Assign Role</th>
        <th></th> <!-- Empty header for Delete column -->
    </tr>
    </thead>
    <tbody>
    @foreach (var user in usersWithRoles)
    {
    <tr>
        <td>@user.Email</td>
        <td>@string.Join(", ", user.Roles)</td>
        <td>
            @using (Html.BeginForm("AssignRole", "Admin", FormMethod.Post, new { @class = "form-inline" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group mb-2 mr-sm-2">
                    <select class="custom-select" name="roleName" asp-items="roles"></select>
                </div>
                <input type="hidden" name="userId" value="@user.UserId" />
                <button type="submit" class="btn btn-sm btn-outline-info">Assign</button>
            }
        </td>
        <td>
            <a href="@Url.Action("EditUser", new { userId = user.UserId })" class="btn btn-secondary btn-md">Edit</a>
        </td>
        <td>
            <a href="@Url.Action("DeleteUser", "Admin", new { id = user.UserId })" class="btn btn-sm btn-outline-danger">
                Delete
            </a>
        </td>

    </tr>
    }
    </tbody>
</table>
